[[java-query-dsl-geo-shape-query]]
==== GeoShape Query

查看 {ref}/query-dsl-geo-shape-query.html[Geo Shape Query]

Note: `geo_shape` 类型使用 `Spatial4J` 和 `JTS` 两种依赖。
因此，必须将 `Spatial4J` 和 `JTS` 添加到 classpath中才能使用这种类型:

[source,xml]
-----------------------------------------------
<dependency>
    <groupId>org.locationtech.spatial4j</groupId>
    <artifactId>spatial4j</artifactId>
    <version>0.7</version>  <1>
</dependency>

<dependency>
    <groupId>org.locationtech.jts</groupId>
    <artifactId>jts-core</artifactId>
    <version>1.15.0</version> <2>
    <exclusions>
        <exclusion>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
        </exclusion>
    </exclusions>
</dependency>
-----------------------------------------------
<1> 在 http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.locationtech.spatial4j%22%20AND%20a%3A%22spatial4j%22[Maven Central] 中查看更新
<2> 在 http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.locationtech.jts%22%20AND%20a%3A%22jts-core%22[Maven Central] 中查看更新

[source,java]
--------------------------------------------------
// Import ShapeRelation and ShapeBuilder
import org.elasticsearch.common.geo.ShapeRelation;
import org.elasticsearch.common.geo.builders.ShapeBuilder;
--------------------------------------------------

["source","java"]
--------------------------------------------------
GeoShapeQueryBuilder qb = geoShapeQuery(
        "pin.location", <1>
        new MultiPointBuilder( <2>
                new CoordinatesBuilder()
            .coordinate(0, 0)
            .coordinate(0, 10)
            .coordinate(10, 10)
            .coordinate(10, 0)
            .coordinate(0, 0)
            .build()));
qb.relation(ShapeRelation.WITHIN); <3>
--------------------------------------------------
<1> field
<2> shape
<3> 关系可以是 `ShapeRelation.CONTAINS`, `ShapeRelation.WITHIN`, `ShapeRelation.INTERSECTS` 或 `ShapeRelation.DISJOINT`

["source","java"]
--------------------------------------------------
// Using pre-indexed shapes
GeoShapeQueryBuilder qb = geoShapeQuery(
            "pin.location", <1>
            "DEU", <2>
            "countries"); <3>
qb.relation(ShapeRelation.WITHIN) <4>
    .indexedShapeIndex("shapes") <5>
    .indexedShapePath("location");  <6>
--------------------------------------------------
<1> field
<2> 包含pre-indexed形状的文档ID
<3> 包含pre-indexed形状的index type
<4> relation
<5> 包含pre-indexed形状的index名，默认是shapes
<6> 包含pre-indexed形状的字段名，默认是'shape'

