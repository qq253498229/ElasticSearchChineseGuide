[[java-aggs]]
== Aggregations(聚合)

Elasticsearch 提供了完整的 Java API 来使用aggregation.
请查看 {ref}/search-aggregations.html[Aggregations guide]。

使用factory来构建聚合( `AggregationBuilders` )，并将需要统计的聚合加入到查询语句中:

[source,java]
--------------------------------------------------
SearchResponse sr = node.client().prepareSearch()
        .setQuery( /* your query */ )
        .addAggregation( /* add an aggregation */ )
        .execute().actionGet();
--------------------------------------------------

注意，这里可以添加多个聚合。
详情请查看 {ref}/search-search.html[Search Java API] 。

为了构建聚合请求，可以使用内置的 `AggregationBuilders` 助手。
只需要在你的类中引入:

[source,java]
--------------------------------------------------
import org.elasticsearch.search.aggregations.AggregationBuilders;
--------------------------------------------------

=== Structuring aggregations

如 {ref}/search-aggregations.html[Aggregations guide] 所述，你可以在聚合中定义子聚合。

聚合可以是 **指标（Metrics）** 聚合或者是 **桶（Buckets）** 聚合。

例如，这个例子里有3个聚合，分别由下面这些部分组成：

- 条件聚合(桶)
- 日期柱状图聚合(桶)
- 平均值聚合(指标)

An aggregation could be a metrics aggregation or a bucket aggregation.

For example, here is a 3 levels aggregation composed of:

* Terms aggregation (bucket)
* Date Histogram aggregation (bucket)
* Average aggregation (metric)

[source,java]
--------------------------------------------------
SearchResponse sr = node.client().prepareSearch()
    .addAggregation(
        AggregationBuilders.terms("by_country").field("country")
        .subAggregation(AggregationBuilders.dateHistogram("by_year")
            .field("dateOfBirth")
            .dateHistogramInterval(DateHistogramInterval.YEAR)
            .subAggregation(AggregationBuilders.avg("avg_children").field("children"))
        )
    )
    .execute().actionGet();
--------------------------------------------------

=== Metrics aggregations

include::aggregations/metrics.asciidoc[]

=== Bucket aggregations

include::aggregations/bucket.asciidoc[]
